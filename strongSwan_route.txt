# Route traffic over IPSec

# Route the traffic from site1(172.16.1.0/24) to site2(10.10.1.0/24), then to 10.10.2.0/24
sudo sysctl -w net.ipv4.ip_forward=1
sudo iptables -t nat -A POSTROUTING -s 172.16.10.0/24 -j MASQUERADE
# OR
sudo iptables -t nat -A POSTROUTING  -s 172.16.1.100 -d 10.10.2.0/24 -o eth0 -j MASQUERADE

# Check rulres are expected by
sudo iptables -S (or -L)
sudo iptables -t nat -S


#OR:
sudo sysctl -w net.ipv4.ip_forward=1
sudo iptables -t nat -A POSTROUTING -d 192.168.10.13 -j MASQUERADE

# If it needs to route the remote access VPN(user vpn) to site to site vpn, the leftsubnets should be overlapped. In the client side, it needs to make the routes correct too, e.g.  sudo route -n add -net 10.0.0.0/8 ipsec_virtual_ip


# With the virtual network interface for the route-based e.g. GRE/vti
Box1:
sudo sysctl -w net.ipv4.ip_forward=1
sudo ip tunnel add gre1 mode gre local 10.10.1.100 remote 10.10.2.137 ttl 255
sudo ip link set gre1 up
sudo ip addr add 192.168.1.101 peer 192.168.1.100 dev gre1

Box2:
sudo sysctl -w net.ipv4.ip_forward=1
sudo ip tunnel add gre1 mode gre remote 10.10.1.100 local 10.10.2.137 ttl 255
sudo ip link set gre1 up
sudo ip addr add 192.168.1.100 peer 192.168.1.101 dev gre1
sudo ip route add 172.168.1.0/24 dev gre1
ping 172.168.1.100
ping -I gre1 10.10.1.100
ping -I gre1 172.16.1.100



